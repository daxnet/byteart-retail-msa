@page "/products"
@using System.Text.Json
@using ByteartRetail.WebApp.Models
@using System.Text
@inject HttpClient HttpClient
@inject IToastService toastService
@inject UserState UserState

<PageTitle>商品信息</PageTitle>

<h1>商品信息</h1>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>名称</th>
                <th>描述</th>
                <th>价格</th>
                <th style="min-width: 150px;">操作</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in products)
            {
                <tr>
                    <td>@p.Name</td>
                    <td>@p.Description</td>
                    <td>@p.Price.ToString("C")</td>
                    <td>
                        <button class="btn btn-primary" @onclick="@(async () => await AddToCartAsync(p.Id))">加入购物车</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ProductViewModel[]? products;

    protected override async Task OnInitializedAsync()
    {
        products = await HttpClient.GetFromJsonAsync<ProductViewModel[]>("product-catalog-service/ProductCatalog").ConfigureAwait(false);
    }

    private async Task AddToCartAsync(Guid productId)
    {
        var payload = new
        {
            customerId = UserState.UserId,
            productId,
            quantity = 1
        };

        try
        {
            var content = new StringContent(JsonSerializer.Serialize(payload), Encoding.UTF8, "application/json");
            var responseMessage = await HttpClient.PostAsync("shopping-cart-service/ShoppingCarts/add-product", content);
            responseMessage.EnsureSuccessStatusCode();
            toastService.ShowSuccess("操作成功");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            toastService.ShowError(ex.Message, "操作失败");
        }
    }
}
